Tests Implementados:
GET /api/inmuebles (obtenerTodosLosInmuebles)
‚úÖ IN2A - Retorna lista cuando existen inmuebles
‚úÖ IN2B - Retorna lista vac√≠a cuando no hay inmuebles
‚úÖ Maneja excepciones del servicio
GET /api/inmuebles/activos, /inactivos, /disponibles
üüß IN2A - Retorna inmuebles activos (si existen) - NO DEBER√çA EXISTIR?
‚úÖ IN2C - Retorna inmuebles inactivos (si existen)
‚úÖ IN2F - Retorna inmuebles disponibles correctamente (si existen)
‚úÖ Verifica que se llame al m√©todo correcto del servicio
üüß Retorna inmuebles alquilados (si existen)
GET /api/inmuebles/{id} (obtenerInmueblePorId)
‚úÖ Retorna inmueble cuando el ID es v√°lido
‚úÖ Lanza excepci√≥n cuando el inmueble no existe // Eror 404 Not Found
GET /api/inmuebles/propietario/{propietarioId} (buscarPorPropietario)
‚úÖ IN2H - Retorna inmuebles del propietario cuando existe 
‚úÖ Retorna lista vac√≠a cuando el propietario no tiene inmuebles
GET /api/inmuebles/buscar-direccion (buscarPorDireccion) 
‚úÖ Retorna inmuebles que coinciden con la direcci√≥n (No se usa?)
‚úÖ Retorna lista vac√≠a cuando no hay coincidencias (No se usa?)
GET /api/inmuebles/buscar-tipo (buscarPorTipo)
‚úÖ Retorna inmuebles del tipo especificado (No se usa?)
‚úÖ Retorna lista vac√≠a cuando no hay coincidencias (No se usa?)
POST /api/inmuebles (crearInmueble)
‚úÖ IN1A - Crea inmueble exitosamente con datos v√°lidos
‚úÖ Lanza excepci√≥n cuando el propietario no existe - En el front ser√≠a imposible?
‚úÖ IN1C - Lanza excepci√≥n cuando los datos son inv√°lidos
üüß IN1C - Crear un inmueble con una direcci√≥n que ya existe
PUT /api/inmuebles/{id} (actualizarInmueble)
‚úÖ IN3A - Actualiza inmueble exitosamente
‚úÖ Lanza excepci√≥n cuando el inmueble no existe
PATCH /api/inmuebles/{id}/alquiler (cambiarEstadoAlquiler)
‚úÖ IN3D - Cambia estado de alquiler exitosamente
‚úÖ Lanza excepci√≥n cuando el inmueble no existe
PATCH /api/inmuebles/{id}/desactivar (desactivarInmueble)
‚úÖ IN3D - Desactiva inmueble exitosamente
‚úÖ Lanza excepci√≥n cuando el inmueble no existe
DELETE /api/inmuebles/{id} (eliminarInmueble)
‚úÖ Elimina inmueble exitosamente
‚úÖ Lanza excepci√≥n cuando el inmueble no existe
‚úÖ Lanza excepci√≥n cuando tiene datos relacionados (contratos)
Caracter√≠sticas de los Tests:
Cobertura completa: 28 tests que cubren todos los endpoints y casos edge
M√©todo helper: createInmuebleDTO() para crear objetos de prueba consistentes con todos los campos necesarios
(id, direcci√≥n, propietarioId, tipo, superficie, estados)
Verificaciones exhaustivas: Status codes HTTP, contenido de respuestas, y llamadas correctas a los servicios
Casos de error: Manejo de inmuebles no encontrados, propietarios inexistentes, datos inv√°lidos, y conflictos de
integridad
Los tests del InmuebleController est√°n implementados y listos para ejecutarse, proporcionando una cobertura
completa de la funcionalidad de gesti√≥n de inmuebles en tu aplicaci√≥n.